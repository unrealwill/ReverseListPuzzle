demoUnionFind()
False
True
1
0
2
0
demo1()
Number of nodes : 69281
len(self.ccbylabel )
34927
number of subgraph of length > 100 : 38
spanningTree of connected component of (3,5,7) 
{(1, 6, 8): [(7, 8)], (7, 8): [(1, 6, 8), (6, 1, 8), (2, 5, 8), (5, 2, 8), (7, 2, 6), (7, 6, 2), (3, 4, 8), (4, 3, 8), (7, 3, 5), (7, 5, 3)], (6, 1, 8): [(7, 8), (2, 4, 1, 8), (4, 2, 1, 8)], (8, 1, 6): [(8, 7), (3, 5, 1, 6), (5, 3, 1, 6)], (8, 7): [(8, 1, 6), (8, 6, 1), (8, 2, 5), (8, 5, 2), (2, 6, 7), (6, 2, 7), (8, 3, 4), (8, 4, 3), (3, 5, 7), (5, 3, 7)], (8, 6, 1): [(8, 7), (8, 2, 4, 1), (8, 4, 2, 1), (3, 5, 6, 1), (5, 3, 6, 1)], (2, 5, 8): [(7, 8), (2, 5, 1, 7), (2, 5, 7, 1)], (5, 2, 8): [(7, 8), (1, 4, 2, 8), (4, 1, 2, 8), (5, 2, 7, 1)], (8, 2, 5): [(8, 7), (1, 7, 2, 5), (7, 1, 2, 5)], (8, 5, 2): [(8, 7), (8, 1, 4, 2), (8, 4, 1, 2), (1, 7, 5, 2), (7, 1, 5, 2)], (2, 6, 7): [(8, 7), (2, 5, 1, 7)], (6, 2, 7): [(8, 7), (1, 5, 2, 7), (5, 1, 2, 7)], (7, 2, 6): [(7, 8), (7, 2, 5, 1), (3, 4, 2, 6), (4, 3, 2, 6)], (7, 6, 2): [(7, 8), (7, 5, 1, 2), (3, 4, 6, 2), (4, 3, 6, 2)], (3, 4, 8): [(7, 8), (1, 2, 4, 8), (2, 1, 4, 8), (3, 4, 7, 1)], (4, 3, 8): [(7, 8), (4, 3, 1, 7), (4, 3, 7, 1)], (8, 3, 4): [(8, 7), (8, 1, 2, 4), (8, 2, 1, 4), (1, 7, 3, 4), (7, 1, 3, 4), (2, 6, 3, 4), (6, 2, 3, 4)], (8, 4, 3): [(8, 7), (1, 7, 4, 3), (7, 1, 4, 3), (2, 6, 4, 3), (6, 2, 4, 3)], (3, 5, 7): [(8, 7), (1, 2, 5, 7), (2, 1, 5, 7), (3, 1, 4, 7), (3, 4, 1, 7)], (5, 3, 7): [(8, 7), (5, 2, 1, 7), (1, 4, 3, 7), (4, 1, 3, 7)], (7, 3, 5): [(7, 8), (7, 2, 1, 5), (7, 3, 1, 4), (7, 3, 4, 1), (1, 6, 3, 5), (6, 1, 3, 5)], (7, 5, 3): [(7, 8), (7, 5, 2, 1), (7, 4, 1, 3), (1, 6, 5, 3), (6, 1, 5, 3)], (1, 2, 4, 8): [(3, 4, 8)], (1, 2, 8, 4): [(3, 8, 4), (1, 2, 3, 5, 4)], (3, 8, 4): [(1, 2, 8, 4), (2, 1, 8, 4), (3, 1, 7, 4), (3, 7, 1, 4), (3, 2, 6, 4), (3, 6, 2, 4)], (1, 4, 2, 8): [(5, 2, 8)], (1, 4, 8, 2): [(5, 8, 2), (1, 4, 5, 3, 2)], (5, 8, 2): [(1, 4, 8, 2), (4, 1, 8, 2), (5, 1, 7, 2), (5, 7, 1, 2)], (1, 8, 2, 4): [(1, 8, 6), (1, 3, 5, 2, 4)], (1, 8, 6): [(1, 8, 2, 4), (1, 8, 4, 2), (1, 3, 5, 6), (1, 5, 3, 6)], (1, 8, 4, 2): [(1, 8, 6), (1, 3, 5, 4, 2)], (2, 1, 4, 8): [(3, 4, 8), (2, 1, 4, 5, 3)], (2, 1, 8, 4): [(3, 8, 4), (2, 1, 3, 5, 4)], (2, 4, 1, 8): [(6, 1, 8)], (2, 4, 8, 1): [(6, 8, 1)], (6, 8, 1): [(2, 4, 8, 1), (4, 2, 8, 1), (6, 3, 5, 1), (6, 5, 3, 1)], (2, 8, 1, 4): [(2, 8, 5), (2, 3, 5, 1, 4)], (2, 8, 5): [(2, 8, 1, 4), (2, 8, 4, 1), (2, 1, 7, 5), (2, 7, 1, 5)], (2, 8, 4, 1): [(2, 8, 5), (2, 3, 5, 4, 1)], (4, 1, 2, 8): [(5, 2, 8), (4, 1, 2, 3, 5)], (4, 1, 8, 2): [(5, 8, 2), (4, 1, 3, 5, 2)], (4, 2, 1, 8): [(6, 1, 8)], (4, 2, 8, 1): [(6, 8, 1)], (4, 8, 1, 2): [(4, 8, 3), (4, 5, 3, 1, 2)], (4, 8, 3): [(4, 8, 1, 2), (4, 8, 2, 1), (4, 1, 7, 3), (4, 7, 1, 3), (4, 2, 6, 3), (4, 6, 2, 3)], (4, 8, 2, 1): [(4, 8, 3), (4, 5, 3, 2, 1)], (8, 1, 2, 4): [(8, 3, 4), (3, 5, 1, 2, 4), (5, 3, 1, 2, 4)], (8, 1, 4, 2): [(8, 5, 2), (3, 5, 1, 4, 2), (5, 3, 1, 4, 2)], (8, 2, 1, 4): [(8, 3, 4), (3, 5, 2, 1, 4), (5, 3, 2, 1, 4)], (8, 2, 4, 1): [(8, 6, 1), (3, 5, 2, 4, 1), (5, 3, 2, 4, 1)], (8, 4, 1, 2): [(8, 5, 2), (3, 5, 4, 1, 2), (5, 3, 4, 1, 2)], (8, 4, 2, 1): [(8, 6, 1), (3, 5, 4, 2, 1), (5, 3, 4, 2, 1)], (1, 2, 5, 7): [(3, 5, 7)], (1, 2, 7, 5): [(3, 7, 5), (1, 2, 3, 4, 5)], (3, 7, 5): [(1, 2, 7, 5), (2, 1, 7, 5), (3, 7, 1, 4), (3, 7, 4, 1), (3, 1, 6, 5), (3, 6, 1, 5)], (1, 5, 2, 7): [(6, 2, 7)], (1, 5, 7, 2): [(6, 7, 2)], (6, 7, 2): [(1, 5, 7, 2), (5, 1, 7, 2), (6, 3, 4, 2), (6, 4, 3, 2)], (1, 7, 2, 5): [(8, 2, 5), (1, 3, 4, 2, 5), (1, 4, 3, 2, 5)], (1, 7, 5, 2): [(8, 5, 2), (1, 3, 4, 5, 2), (1, 4, 3, 5, 2)], (2, 1, 5, 7): [(3, 5, 7)], (2, 1, 7, 5): [(3, 7, 5), (2, 8, 5), (2, 1, 3, 4, 5), (2, 1, 4, 3, 5)], (2, 5, 1, 7): [(2, 6, 7), (2, 5, 8)], (2, 5, 7, 1): [(2, 5, 8), (2, 5, 4, 3, 1)], (2, 7, 1, 5): [(2, 8, 5), (2, 7, 6), (2, 3, 4, 1, 5)], (2, 7, 6): [(2, 7, 1, 5), (2, 7, 5, 1), (2, 3, 4, 6), (2, 4, 3, 6)], (2, 7, 5, 1): [(2, 7, 6), (2, 3, 4, 5, 1)], (5, 1, 2, 7): [(6, 2, 7)], (5, 1, 7, 2): [(6, 7, 2), (5, 8, 2)], (5, 2, 1, 7): [(5, 3, 7)], (5, 2, 7, 1): [(5, 2, 8)], (5, 7, 1, 2): [(5, 8, 2), (5, 7, 3), (5, 4, 3, 1, 2)], (5, 7, 3): [(5, 7, 1, 2), (5, 7, 2, 1), (1, 4, 7, 3), (4, 1, 7, 3), (5, 1, 6, 3), (5, 6, 1, 3)], (5, 7, 2, 1): [(5, 7, 3), (5, 4, 3, 2, 1)], (7, 1, 2, 5): [(8, 2, 5), (3, 4, 1, 2, 5), (4, 3, 1, 2, 5)], (7, 1, 5, 2): [(8, 5, 2), (3, 4, 1, 5, 2), (4, 3, 1, 5, 2)], (7, 2, 1, 5): [(7, 3, 5), (3, 4, 2, 1, 5), (4, 3, 2, 1, 5)], (7, 2, 5, 1): [(7, 2, 6), (3, 4, 2, 5, 1), (4, 3, 2, 5, 1)], (7, 5, 1, 2): [(7, 6, 2), (3, 4, 5, 1, 2), (4, 3, 5, 1, 2)], (7, 5, 2, 1): [(7, 5, 3), (3, 4, 5, 2, 1), (4, 3, 5, 2, 1)], (1, 4, 3, 7): [(5, 3, 7)], (1, 4, 7, 3): [(5, 7, 3), (1, 4, 5, 2, 3)], (1, 7, 3, 4): [(8, 3, 4), (1, 2, 5, 3, 4)], (1, 7, 4, 3): [(8, 4, 3), (1, 2, 5, 4, 3)], (3, 1, 4, 7): [(3, 5, 7), (3, 1, 4, 5, 2)], (3, 1, 7, 4): [(3, 8, 4), (3, 1, 2, 5, 4)], (3, 4, 1, 7): [(3, 5, 7)], (3, 4, 7, 1): [(3, 4, 8)], (3, 7, 1, 4): [(3, 8, 4), (3, 7, 5), (3, 2, 5, 1, 4)], (3, 7, 4, 1): [(3, 7, 5), (3, 2, 5, 4, 1)], (4, 1, 3, 7): [(5, 3, 7), (4, 1, 3, 2, 5)], (4, 1, 7, 3): [(5, 7, 3), (4, 8, 3), (4, 1, 2, 5, 3)], (4, 3, 1, 7): [(4, 3, 8)], (4, 3, 7, 1): [(4, 3, 8)], (4, 7, 1, 3): [(4, 8, 3), (4, 5, 2, 1, 3)], (7, 1, 3, 4): [(8, 3, 4), (2, 5, 1, 3, 4), (5, 2, 1, 3, 4)], (7, 1, 4, 3): [(8, 4, 3), (2, 5, 1, 4, 3), (5, 2, 1, 4, 3)], (7, 3, 1, 4): [(7, 3, 5), (2, 5, 3, 1, 4), (5, 2, 3, 1, 4)], (7, 3, 4, 1): [(7, 3, 5), (2, 5, 3, 4, 1), (5, 2, 3, 4, 1)], (7, 4, 1, 3): [(7, 5, 3), (2, 5, 4, 1, 3), (5, 2, 4, 1, 3)], (1, 3, 5, 6): [(4, 5, 6), (1, 8, 6)], (4, 5, 6): [(1, 3, 5, 6), (3, 1, 5, 6), (4, 2, 3, 6), (4, 3, 2, 6)], (1, 3, 6, 5): [(4, 6, 5), (1, 3, 2, 4, 5)], (4, 6, 5): [(1, 3, 6, 5), (3, 1, 6, 5), (4, 6, 3, 2)], (1, 5, 3, 6): [(1, 8, 6)], (1, 6, 3, 5): [(7, 3, 5), (1, 2, 4, 3, 5), (1, 4, 2, 3, 5)], (1, 6, 5, 3): [(7, 5, 3), (1, 2, 4, 5, 3), (1, 4, 2, 5, 3)], (3, 1, 5, 6): [(4, 5, 6), (3, 1, 5, 4, 2)], (3, 1, 6, 5): [(4, 6, 5), (3, 7, 5), (3, 1, 2, 4, 5), (3, 1, 4, 2, 5)], (3, 5, 1, 6): [(8, 1, 6)], (3, 5, 6, 1): [(8, 6, 1)], (3, 6, 1, 5): [(3, 7, 5), (3, 2, 4, 1, 5)], (5, 1, 3, 6): [(5, 4, 6)], (5, 4, 6): [(5, 1, 3, 6), (5, 3, 1, 6), (2, 3, 4, 6), (3, 2, 4, 6)], (5, 1, 6, 3): [(5, 7, 3)], (5, 3, 1, 6): [(8, 1, 6), (5, 4, 6)], (5, 3, 6, 1): [(8, 6, 1)], (5, 6, 1, 3): [(5, 7, 3), (5, 6, 4), (5, 4, 2, 1, 3)], (5, 6, 4): [(5, 6, 1, 3), (5, 6, 3, 1), (2, 3, 6, 4), (3, 2, 6, 4)], (5, 6, 3, 1): [(5, 6, 4), (5, 4, 2, 3, 1)], (6, 1, 3, 5): [(7, 3, 5), (6, 4, 5), (2, 4, 1, 3, 5), (4, 2, 1, 3, 5)], (6, 4, 5): [(6, 1, 3, 5), (6, 3, 1, 5), (6, 4, 2, 3)], (6, 1, 5, 3): [(7, 5, 3), (2, 4, 1, 5, 3), (4, 2, 1, 5, 3)], (6, 3, 1, 5): [(6, 4, 5), (2, 4, 3, 1, 5), (4, 2, 3, 1, 5)], (6, 3, 5, 1): [(6, 8, 1), (2, 4, 3, 5, 1), (4, 2, 3, 5, 1)], (6, 5, 1, 3): [(6, 5, 4), (2, 4, 5, 1, 3), (4, 2, 5, 1, 3)], (6, 5, 4): [(6, 5, 1, 3), (6, 5, 3, 1), (6, 2, 3, 4), (6, 3, 2, 4)], (6, 5, 3, 1): [(6, 8, 1), (6, 5, 4), (2, 4, 5, 3, 1), (4, 2, 5, 3, 1)], (2, 3, 4, 6): [(5, 4, 6), (2, 7, 6)], (2, 3, 6, 4): [(5, 6, 4), (2, 3, 1, 5, 4)], (2, 4, 3, 6): [(2, 7, 6)], (2, 6, 3, 4): [(8, 3, 4), (2, 1, 5, 3, 4)], (2, 6, 4, 3): [(8, 4, 3), (2, 1, 5, 4, 3)], (3, 2, 4, 6): [(5, 4, 6), (3, 2, 4, 5, 1)], (3, 2, 6, 4): [(5, 6, 4), (3, 8, 4), (3, 2, 1, 5, 4)], (3, 4, 2, 6): [(7, 2, 6)], (3, 4, 6, 2): [(7, 6, 2)], (3, 6, 2, 4): [(3, 8, 4), (3, 1, 5, 2, 4)], (4, 2, 3, 6): [(4, 5, 6)], (4, 2, 6, 3): [(4, 8, 3)], (4, 3, 2, 6): [(7, 2, 6), (4, 5, 6)], (4, 3, 6, 2): [(7, 6, 2)], (4, 6, 2, 3): [(4, 8, 3), (4, 1, 5, 2, 3), (4, 5, 1, 2, 3)], (4, 6, 3, 2): [(4, 6, 5), (4, 1, 5, 3, 2), (4, 5, 1, 3, 2)], (6, 2, 3, 4): [(8, 3, 4), (6, 5, 4), (1, 5, 2, 3, 4), (5, 1, 2, 3, 4)], (6, 2, 4, 3): [(8, 4, 3), (1, 5, 2, 4, 3), (5, 1, 2, 4, 3)], (6, 3, 2, 4): [(6, 5, 4), (1, 5, 3, 2, 4), (5, 1, 3, 2, 4)], (6, 3, 4, 2): [(6, 7, 2), (1, 5, 3, 4, 2), (5, 1, 3, 4, 2)], (6, 4, 2, 3): [(6, 4, 5), (1, 5, 4, 2, 3), (5, 1, 4, 2, 3)], (6, 4, 3, 2): [(6, 7, 2), (1, 5, 4, 3, 2), (5, 1, 4, 3, 2)], (1, 2, 3, 4, 5): [(1, 2, 7, 5)], (1, 2, 3, 5, 4): [(1, 2, 8, 4)], (1, 2, 4, 3, 5): [(1, 6, 3, 5)], (1, 2, 4, 5, 3): [(1, 6, 5, 3)], (1, 2, 5, 3, 4): [(1, 7, 3, 4)], (1, 2, 5, 4, 3): [(1, 7, 4, 3)], (1, 3, 2, 4, 5): [(1, 3, 6, 5)], (1, 3, 2, 5, 4): [(1, 3, 7, 4)], (1, 3, 7, 4): [(1, 3, 2, 5, 4), (1, 3, 5, 2, 4)], (1, 3, 4, 2, 5): [(1, 7, 2, 5), (1, 3, 4, 7)], (1, 3, 4, 7): [(1, 3, 4, 2, 5)], (1, 3, 4, 5, 2): [(1, 7, 5, 2)], (1, 3, 5, 2, 4): [(1, 8, 2, 4), (1, 3, 7, 4)], (1, 3, 5, 4, 2): [(1, 8, 4, 2)], (1, 4, 2, 3, 5): [(1, 6, 3, 5)], (1, 4, 2, 5, 3): [(1, 6, 5, 3)], (1, 4, 3, 2, 5): [(1, 7, 2, 5)], (1, 4, 3, 5, 2): [(1, 7, 5, 2)], (1, 4, 5, 2, 3): [(1, 4, 7, 3)], (1, 4, 5, 3, 2): [(1, 4, 8, 2)], (1, 5, 2, 3, 4): [(6, 2, 3, 4)], (1, 5, 2, 4, 3): [(6, 2, 4, 3), (1, 5, 6, 3)], (1, 5, 6, 3): [(1, 5, 2, 4, 3)], (1, 5, 3, 2, 4): [(6, 3, 2, 4)], (1, 5, 3, 4, 2): [(6, 3, 4, 2)], (1, 5, 4, 2, 3): [(6, 4, 2, 3)], (1, 5, 4, 3, 2): [(6, 4, 3, 2)], (2, 1, 3, 4, 5): [(2, 1, 7, 5)], (2, 1, 3, 5, 4): [(2, 1, 8, 4)], (2, 1, 4, 3, 5): [(2, 1, 7, 5)], (2, 1, 4, 5, 3): [(2, 1, 4, 8)], (2, 1, 5, 3, 4): [(2, 6, 3, 4)], (2, 1, 5, 4, 3): [(2, 6, 4, 3)], (2, 3, 1, 5, 4): [(2, 3, 6, 4)], (2, 3, 4, 1, 5): [(2, 7, 1, 5)], (2, 3, 4, 5, 1): [(2, 7, 5, 1)], (2, 3, 5, 1, 4): [(2, 8, 1, 4)], (2, 3, 5, 4, 1): [(2, 8, 4, 1)], (2, 4, 1, 3, 5): [(6, 1, 3, 5)], (2, 4, 1, 5, 3): [(6, 1, 5, 3), (2, 4, 6, 3)], (2, 4, 6, 3): [(2, 4, 1, 5, 3)], (2, 4, 3, 1, 5): [(6, 3, 1, 5)], (2, 4, 3, 5, 1): [(6, 3, 5, 1)], (2, 4, 5, 1, 3): [(6, 5, 1, 3)], (2, 4, 5, 3, 1): [(6, 5, 3, 1)], (2, 5, 1, 3, 4): [(7, 1, 3, 4)], (2, 5, 1, 4, 3): [(7, 1, 4, 3)], (2, 5, 3, 1, 4): [(7, 3, 1, 4)], (2, 5, 3, 4, 1): [(7, 3, 4, 1)], (2, 5, 4, 1, 3): [(7, 4, 1, 3)], (2, 5, 4, 3, 1): [(7, 4, 3, 1), (2, 5, 7, 1)], (7, 4, 3, 1): [(2, 5, 4, 3, 1), (5, 2, 4, 3, 1)], (3, 1, 2, 4, 5): [(3, 1, 6, 5)], (3, 1, 2, 5, 4): [(3, 1, 7, 4)], (3, 1, 4, 2, 5): [(3, 1, 6, 5)], (3, 1, 4, 5, 2): [(3, 1, 4, 7)], (3, 1, 5, 2, 4): [(3, 6, 2, 4)], (3, 1, 5, 4, 2): [(3, 6, 4, 2), (3, 1, 5, 6)], (3, 6, 4, 2): [(3, 1, 5, 4, 2)], (3, 2, 1, 5, 4): [(3, 2, 6, 4)], (3, 2, 4, 1, 5): [(3, 6, 1, 5)], (3, 2, 4, 5, 1): [(3, 6, 5, 1), (3, 2, 4, 6)], (3, 6, 5, 1): [(3, 2, 4, 5, 1)], (3, 2, 5, 1, 4): [(3, 7, 1, 4)], (3, 2, 5, 4, 1): [(3, 7, 4, 1)], (3, 4, 1, 2, 5): [(7, 1, 2, 5)], (3, 4, 1, 5, 2): [(7, 1, 5, 2)], (3, 4, 2, 1, 5): [(7, 2, 1, 5)], (3, 4, 2, 5, 1): [(7, 2, 5, 1)], (3, 4, 5, 1, 2): [(7, 5, 1, 2)], (3, 4, 5, 2, 1): [(7, 5, 2, 1)], (3, 5, 1, 2, 4): [(8, 1, 2, 4)], (3, 5, 1, 4, 2): [(8, 1, 4, 2)], (3, 5, 2, 1, 4): [(8, 2, 1, 4)], (3, 5, 2, 4, 1): [(8, 2, 4, 1)], (3, 5, 4, 1, 2): [(8, 4, 1, 2)], (3, 5, 4, 2, 1): [(8, 4, 2, 1)], (4, 1, 2, 3, 5): [(4, 1, 2, 8)], (4, 1, 2, 5, 3): [(4, 1, 7, 3)], (4, 1, 3, 2, 5): [(4, 1, 3, 7)], (4, 1, 3, 5, 2): [(4, 1, 8, 2)], (4, 1, 5, 2, 3): [(4, 6, 2, 3)], (4, 1, 5, 3, 2): [(4, 6, 3, 2)], (4, 2, 1, 3, 5): [(6, 1, 3, 5)], (4, 2, 1, 5, 3): [(6, 1, 5, 3)], (4, 2, 3, 1, 5): [(6, 3, 1, 5)], (4, 2, 3, 5, 1): [(6, 3, 5, 1)], (4, 2, 5, 1, 3): [(6, 5, 1, 3)], (4, 2, 5, 3, 1): [(6, 5, 3, 1), (4, 7, 3, 1)], (4, 7, 3, 1): [(4, 2, 5, 3, 1), (4, 5, 2, 3, 1)], (4, 3, 1, 2, 5): [(7, 1, 2, 5)], (4, 3, 1, 5, 2): [(7, 1, 5, 2)], (4, 3, 2, 1, 5): [(7, 2, 1, 5)], (4, 3, 2, 5, 1): [(7, 2, 5, 1)], (4, 3, 5, 1, 2): [(7, 5, 1, 2)], (4, 3, 5, 2, 1): [(7, 5, 2, 1)], (4, 5, 1, 2, 3): [(4, 6, 2, 3)], (4, 5, 1, 3, 2): [(4, 6, 3, 2)], (4, 5, 2, 1, 3): [(4, 7, 1, 3)], (4, 5, 2, 3, 1): [(4, 7, 3, 1)], (4, 5, 3, 1, 2): [(4, 8, 1, 2)], (4, 5, 3, 2, 1): [(4, 8, 2, 1)], (5, 1, 2, 3, 4): [(6, 2, 3, 4)], (5, 1, 2, 4, 3): [(6, 2, 4, 3)], (5, 1, 3, 2, 4): [(6, 3, 2, 4)], (5, 1, 3, 4, 2): [(6, 3, 4, 2)], (5, 1, 4, 2, 3): [(6, 4, 2, 3)], (5, 1, 4, 3, 2): [(6, 4, 3, 2)], (5, 2, 1, 3, 4): [(7, 1, 3, 4)], (5, 2, 1, 4, 3): [(7, 1, 4, 3)], (5, 2, 3, 1, 4): [(7, 3, 1, 4)], (5, 2, 3, 4, 1): [(7, 3, 4, 1)], (5, 2, 4, 1, 3): [(7, 4, 1, 3)], (5, 2, 4, 3, 1): [(7, 4, 3, 1)], (5, 3, 1, 2, 4): [(8, 1, 2, 4)], (5, 3, 1, 4, 2): [(8, 1, 4, 2)], (5, 3, 2, 1, 4): [(8, 2, 1, 4)], (5, 3, 2, 4, 1): [(8, 2, 4, 1)], (5, 3, 4, 1, 2): [(8, 4, 1, 2)], (5, 3, 4, 2, 1): [(8, 4, 2, 1)], (5, 4, 2, 1, 3): [(5, 6, 1, 3)], (5, 4, 2, 3, 1): [(5, 6, 3, 1)], (5, 4, 3, 1, 2): [(5, 7, 1, 2)], (5, 4, 3, 2, 1): [(5, 7, 2, 1)]}
diameters of spanning trees
[2, 2, 2, 4, 4, 4, 14, 11, 13, 14, 18, 31, 34, 32, 36, 39, 42, 68, 54, 4, 4, 2, 2, 2, 2, 86, 8, 6, 6, 8, 2, 2, 2, 2, 2, 2, 74, 24, 7, 23, 9, 2, 2, 20, 18, 86, 8, 8, 4, 4, 4, 4, 56, 24, 54, 22, 62, 20, 8, 8, 20, 4, 2, 2, 4, 4, 4, 2, 2, 2, 9, 4, 4, 8, 9, 4, 2, 2, 2, 4, 8, 6, 6, 6, 6, 2, 4, 4, 4, 2, 4, 2, 2, 2, 2, 2, 6, 4, 4, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 2, 2, 10, 6, 2, 6, 2, 6, 6, 6, 12, 2, 2, 14, 2, 2, 6, 2, 2, 2, 2, 6, 6, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 10, 12, 4, 4, 4, 4, 8, 12, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 56, 56, 14, 14, 14, 14, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 2, 2, 2, 2, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 2, 6, 4, 2, 4, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 2, 2, 2, 2, 2, 6, 2, 2, 6, 2, 2, 2, 6, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 6, 2, 6, 2, 6, 6, 4, 2, 4, 2, 4, 4, 6, 4, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 4, 6, 6, 2, 2, 2, 2, 2, 6, 6, 4, 2, 2, 2, 4, 2, 6, 6, 6, 2, 2, 2, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 2, 4, 2, 4, 2, 4, 4, 2, 2, 4, 2, 4, 4, 4, 2, 4, 4, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 91, 87, 104, 16, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 20, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 13, 13, 4, 4, 4, 13, 4, 13, 33, 15, 32, 15, 10, 10, 33, 15, 32, 15, 10, 10, 4, 4, 13, 13, 16, 4, 16, 4, 29, 18, 23, 16, 16, 20, 29, 16, 13, 13, 4, 4, 12, 14, 15, 4, 23, 4, 18, 23, 16, 16, 20, 16, 13, 13, 4, 4, 12, 14, 15, 4, 23, 4, 13, 13, 12, 14, 12, 14, 15, 15, 17, 18, 17, 18, 33, 32, 33, 32, 29, 29, 16, 16, 13, 13, 13, 13, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 16, 16, 13, 13, 13, 13, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 13, 4, 13, 4, 13, 13, 13, 4, 13, 4, 13, 13, 16, 13, 4, 4, 4, 4, 16, 13, 4, 4, 4, 4, 4, 4, 13, 13, 16, 4, 16, 4, 16, 13, 4, 4, 4, 4, 16, 13, 4, 4, 4, 4, 4, 4, 13, 13, 16, 4, 16, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 7, 7, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 7, 2, 7, 2, 2, 2, 7, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 7, 7, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
UpperBound maxDiameterOfCCspaningTrees : 
104
Grouping nodes by label
Grouping nodes by label done
len(CC)
1640
ilab : 0 / 34927
len(inedges)
4072
pairwiseDistanceInCC row 1000 / 1640
len(CC)
1368
len(inedges)
3760
pairwiseDistanceInCC row 1000 / 1368
len(CC)
1306
len(inedges)
3432
pairwiseDistanceInCC row 1000 / 1306
len(CC)
1246
len(inedges)
2804
pairwiseDistanceInCC row 1000 / 1246
len(CC)
1246
len(inedges)
2804
pairwiseDistanceInCC row 1000 / 1246
len(CC)
1176
len(inedges)
3168
pairwiseDistanceInCC row 1000 / 1176
len(CC)
1144
len(inedges)
2592
pairwiseDistanceInCC row 1000 / 1144
len(CC)
924
len(CC)
672
len(CC)
582
len(CC)
582
len(CC)
558
len(CC)
506
len(CC)
452
len(CC)
452
len(CC)
408
len(CC)
298
len(CC)
274
len(CC)
156
len(CC)
156
len(CC)
152
len(CC)
120
len(CC)
120
len(CC)
117
len(CC)
117
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
108
length longest shortest path between seq and revseq
74
len(edges)
39144
checking shortest path node 1000 / 69281
checking shortest path node 2000 / 69281
checking shortest path node 3000 / 69281
checking shortest path node 4000 / 69281
checking shortest path node 5000 / 69281
checking shortest path node 6000 / 69281
checking shortest path node 7000 / 69281
checking shortest path node 8000 / 69281
checking shortest path node 9000 / 69281
checking shortest path node 10000 / 69281
checking shortest path node 11000 / 69281
checking shortest path node 12000 / 69281
checking shortest path node 13000 / 69281
checking shortest path node 14000 / 69281
checking shortest path node 15000 / 69281
checking shortest path node 16000 / 69281
checking shortest path node 17000 / 69281
checking shortest path node 18000 / 69281
checking shortest path node 19000 / 69281
checking shortest path node 20000 / 69281
checking shortest path node 21000 / 69281
checking shortest path node 22000 / 69281
checking shortest path node 23000 / 69281
checking shortest path node 24000 / 69281
checking shortest path node 25000 / 69281
checking shortest path node 26000 / 69281
checking shortest path node 27000 / 69281
checking shortest path node 28000 / 69281
checking shortest path node 29000 / 69281
checking shortest path node 30000 / 69281
checking shortest path node 31000 / 69281
checking shortest path node 32000 / 69281
checking shortest path node 33000 / 69281
checking shortest path node 34000 / 69281
checking shortest path node 35000 / 69281
checking shortest path node 36000 / 69281
checking shortest path node 37000 / 69281
checking shortest path node 38000 / 69281
checking shortest path node 39000 / 69281
checking shortest path node 40000 / 69281
checking shortest path node 41000 / 69281
checking shortest path node 42000 / 69281
checking shortest path node 43000 / 69281
checking shortest path node 44000 / 69281
checking shortest path node 45000 / 69281
checking shortest path node 46000 / 69281
checking shortest path node 47000 / 69281
checking shortest path node 48000 / 69281
checking shortest path node 49000 / 69281
checking shortest path node 50000 / 69281
checking shortest path node 51000 / 69281
checking shortest path node 52000 / 69281
checking shortest path node 53000 / 69281
checking shortest path node 54000 / 69281
checking shortest path node 55000 / 69281
checking shortest path node 56000 / 69281
checking shortest path node 57000 / 69281
checking shortest path node 58000 / 69281
checking shortest path node 59000 / 69281
checking shortest path node 60000 / 69281
checking shortest path node 61000 / 69281
checking shortest path node 62000 / 69281
checking shortest path node 63000 / 69281
checking shortest path node 64000 / 69281
checking shortest path node 65000 / 69281
checking shortest path node 66000 / 69281
checking shortest path node 67000 / 69281
checking shortest path node 68000 / 69281
checking shortest path node 69000 / 69281
longest shortest path :
[(1, 3, 5, 8, 7, 4), (1, 3, 5, 2, 6, 7, 4), (1, 8, 2, 6, 7, 4), (1, 5, 3, 2, 6, 7, 4), (1, 5, 3, 8, 7, 4), (6, 3, 8, 7, 4), (6, 2, 1, 8, 7, 4), (6, 2, 1, 5, 3, 7, 4), (8, 1, 5, 3, 7, 4), (8, 6, 3, 7, 4), (8, 6, 2, 1, 7, 4), (3, 5, 6, 2, 1, 7, 4), (3, 5, 8, 1, 7, 4), (3, 5, 2, 6, 1, 7, 4), (3, 5, 2, 6, 8, 4), (3, 5, 2, 6, 7, 1, 4), (8, 2, 6, 7, 1, 4), (8, 2, 6, 7, 5), (8, 2, 6, 4, 3, 5), (7, 1, 2, 6, 4, 3, 5), (7, 1, 2, 6, 4, 8), (7, 3, 6, 4, 8), (7, 3, 5, 1, 4, 8), (7, 3, 5, 1, 4, 2, 6), (7, 8, 1, 4, 2, 6), (7, 8, 5, 2, 6), (3, 4, 8, 5, 2, 6), (3, 4, 8, 7, 6), (3, 4, 8, 7, 1, 5), (3, 4, 2, 6, 7, 1, 5), (3, 4, 2, 6, 8, 5), (7, 2, 6, 8, 5), (7, 2, 6, 8, 1, 4), (7, 2, 6, 3, 5, 1, 4), (7, 8, 3, 5, 1, 4), (7, 8, 3, 6, 4), (7, 8, 1, 2, 6, 4), (7, 3, 5, 1, 2, 6, 4), (7, 3, 5, 1, 8, 4), (7, 3, 6, 8, 4), (7, 1, 2, 6, 8, 4), (7, 1, 2, 6, 5, 3, 4), (7, 1, 8, 5, 3, 4), (7, 1, 6, 2, 5, 3, 4), (8, 6, 2, 5, 3, 4), (8, 6, 7, 3, 4), (8, 5, 1, 7, 3, 4), (2, 6, 5, 1, 7, 3, 4), (2, 6, 5, 8, 3, 4), (2, 6, 5, 8, 7), (2, 6, 4, 1, 8, 7), (2, 6, 4, 1, 5, 3, 7), (8, 4, 1, 5, 3, 7), (8, 4, 6, 3, 7), (8, 4, 6, 2, 1, 7), (5, 3, 4, 6, 2, 1, 7), (5, 3, 4, 8, 1, 7), (5, 3, 4, 2, 6, 1, 7), (5, 3, 4, 2, 6, 8), (5, 7, 2, 6, 8), (4, 1, 7, 2, 6, 8), (4, 1, 7, 2, 6, 3, 5), (4, 8, 2, 6, 3, 5), (4, 7, 1, 2, 6, 3, 5), (4, 7, 1, 2, 6, 8), (4, 7, 3, 6, 8), (4, 7, 3, 5, 1, 8), (4, 7, 3, 5, 1, 2, 6), (4, 7, 8, 1, 2, 6), (4, 7, 8, 3, 6), (4, 7, 8, 3, 5, 1), (4, 7, 2, 6, 3, 5, 1), (4, 7, 2, 6, 8, 1), (4, 7, 2, 6, 5, 3, 1), (4, 7, 8, 5, 3, 1)]
length of longest path : 74
verification of length of shortest path 
74
revlistpuzzle.getSolution( (3,5,7) )
Warning n not in seq
[(3, 5, 7), (8, 7), (8, 4, 3), (7, 1, 4, 3), (7, 5, 3)]
demoPlot()
Number of nodes : 206
len(self.ccbylabel )
120
number of subgraph of length > 100 : 0
Grouping nodes by label
Grouping nodes by label done
ilab : 0 / 120
length longest shortest path between seq and revseq
0
Number of nodes : 1237
len(self.ccbylabel )
674
number of subgraph of length > 100 : 0
Grouping nodes by label
Grouping nodes by label done
ilab : 0 / 674
length longest shortest path between seq and revseq
14
Number of nodes : 8660
len(self.ccbylabel )
4410
number of subgraph of length > 100 : 12
Grouping nodes by label
Grouping nodes by label done
len(CC)
220
ilab : 0 / 4410
len(CC)
218
len(CC)
186
len(CC)
152
len(CC)
152
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
length longest shortest path between seq and revseq
26
Number of nodes : 69281
len(self.ccbylabel )
34927
number of subgraph of length > 100 : 38
Grouping nodes by label
Grouping nodes by label done
len(CC)
1640
ilab : 0 / 34927
len(inedges)
4072
pairwiseDistanceInCC row 1000 / 1640
len(CC)
1368
len(inedges)
3760
pairwiseDistanceInCC row 1000 / 1368
len(CC)
1306
len(inedges)
3432
pairwiseDistanceInCC row 1000 / 1306
len(CC)
1246
len(inedges)
2804
pairwiseDistanceInCC row 1000 / 1246
len(CC)
1246
len(inedges)
2804
pairwiseDistanceInCC row 1000 / 1246
len(CC)
1176
len(inedges)
3168
pairwiseDistanceInCC row 1000 / 1176
len(CC)
1144
len(inedges)
2592
pairwiseDistanceInCC row 1000 / 1144
len(CC)
924
len(CC)
672
len(CC)
582
len(CC)
582
len(CC)
558
len(CC)
506
len(CC)
452
len(CC)
452
len(CC)
408
len(CC)
298
len(CC)
274
len(CC)
156
len(CC)
156
len(CC)
152
len(CC)
120
len(CC)
120
len(CC)
117
len(CC)
117
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
114
len(CC)
108
length longest shortest path between seq and revseq
74
[(5, 0), (6, 14), (7, 26), (8, 74)]
